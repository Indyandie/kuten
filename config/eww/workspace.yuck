(defpoll activewindow
  :interval "1s"
  "hyprctl -j activewindow"
  )

(defwindow workspaces
  :exclusive true
  :monitor 0
  :stacking "overlay"
  :focusable true
  :hexpand true
  :geometry (geometry 
    :y "0%"
    :width "100%" 
    ; :height 300
    :anchor "top center")
  :class "workspaces"
  (_workspaces)
  )

(defpoll hyprworkspaces
  :interval "1s"
  "hyprctl -j workspaces"
  )



(defvar allworkspaces '[
                      [1, "□", "■", "term", "terminal"],
                      [2, "◯", "●", "web", "web browser"],
                      [3, "▽", "▼", "des", "design"],
                      [4, "◇", "◆", "fun", "games"],
                      [5, "△", "▲", "sys", "system"],
                      [6, "◦", "▪", "六", "roku"],
                      [7, "◦", "▪", "七", "nana"],
                      [8, "◦", "▪", "八", "hachi"],
                      [9, "◦", "▪", "九", "nueve"],
                      [0, "◦", "▪", "十", "diez"]
                              ]')

(defwidget _workspaces []
  (box
    :class {activewindow.fullscreen ? "fullscreen wsp-box" : "wsp-box"}
    :space-evenly false
    :spacing 32
    :height 48
    :hexpand true
    :halign "center"
    (for wsp in allworkspaces
      (button
        :active true
        :height 48
        :tooltip "${wsp[4]}"
        :class {activewindow.workspace.id == wsp[0] ? "active-wsp wsp-btn" : "wsp-btn"} 
        :onclick "hyprctl dispatch workspace ${wsp[0]} && eww close workspaces"
        (box
          :valign "center"
          :spacing 16
          (label
            :class "icon"
            :text {matches(hyprworkspaces, '"id": ${wsp[0]},') ? "${wsp[2]}" : wsp[1]} 
            )
          (label
            :class "name"
            :text "${wsp[3]}"
            )
          )
      )
    )
  )
)
